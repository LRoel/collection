max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
# robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
footprint: [[0.710,-0.410], [0.710,0.410], [-0.520,0.410], [-0.520,-0.410]]  # if the robot is not circular
footprint_padding: 0.01


map_type: costmap

obstacle_layer:
  enabled:              true
  max_obstacle_height:  1.0
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    15
  mark_threshold:       0
  # combination_method:   1
  track_unknown_space:  false    #true needed for disabling global path planning through unknown space
  obstacle_range: 10.0
  raytrace_range: 20.0
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 2
  publish_voxel_map: false
  observation_sources:  scan
  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    min_obstacle_height: 0.30
    max_obstacle_height: 0.50
    obstacle_range: 10.0
    raytrace_range: 15.0
    inf_is_valid: true


  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  4.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     1.0  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true

# range_sensor_layer:
#   clear_threshold:    0.46
#   mark_threshold:     0.98
#   clear_on_max_reading: false
#   no_readings_timeout: 10.0
#   ns:     /range
#   topics: ["6","7"]

  

